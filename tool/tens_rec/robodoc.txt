@module_solve
!****h* src/interface/tens_rec
! NAME
!
!  Module tens_rec
!
! USAGE
!
!  use tens_rec
!
! DESCRIPTION
!
!  This module offers the possibility of reconstructing the tensor
!  coefficients that have to be contracted with tensor integrals in
!  order to reproduce a diagram, which has been specified by a set
!  of denominators and a numerator N(q, mu^2). This module is typically
!  used in connection with the module tens_comb.
!
!  Please, note that this module is generated by a script and should not
!  be modified manually. In order to make changes to this module rerun
!  the Python script
!
!  tool/tens_rec/tens.py
!
! USES
!
!  * precision_golem (src/module/precision_golem.f90)
!
!*****
@module_combine
!****h* src/interface/tens_comb
! NAME
!
!  Module tens_comb
!
! USAGE
!
!  use tens_comb
!
! DESCRIPTION
!
!  This module contains the routines necessary for the contraction
!  of the tensor coefficients as reconstructed by the module tens_rec
!  with the according tensor integrals.
!
!  Please, note that this module is generated by a script and should not
!  be modified manually. In order to make changes to this module rerun
!  the Python script
!
!  tool/tens_rec/tens.py
!
! USES
!
!  * precision_golem (src/module/precision_golem.f90)
!  * matrice_s (src/kinematics/matrice_s.f90)
!  * array (src/module/array.f90)
!  * form_factor_type (src/module/form_factor_type.f90)
!  * form_factor_2p (src/form_factor/form_factor_2p.f90)
!  * form_factor_3p (src/form_factor/form_factor_3p.f90)
!  * form_factor_4p (src/form_factor/form_factor_4p.f90)
!  * form_factor_5p (src/form_factor/form_factor_5p.f90)
!  * form_factor_6p (src/form_factor/form_factor_6p.f90)
!  * form_factor_higher_ranks (src/higherrank/form_factor_higher_ranks.f90)
!  * tens_rec (src/interface/tens_rec.f90)
!
!*****
@subroutine_solve(name,xtra,lname,rname,dmin1,coeff_type)
!****f* src/interface/tens_rec/%(name)s
! NAME
!
!  Subroutine %(name)s
!
! USAGE
!
!  call %(name)s(numeval, indices, mu2, coeffs, idx%(xtra)s)
!
! DESCRIPTION
!
!  This subroutine solves a system generated by substituting the
!  non-zero components of q in the numerator function numeval(q,mu2)
!  for the values given in the array %(rname)s.
!  The matrix %(lname)s is the inverse matrix of the left hand side
!  of the original system.
!
! INPUTS
!
!  * numeval -- a function representing the numerator function
!               N(q, mu2) where q(0:%(dmin1)d) is a real vector,
!               mu2 is a real number and the result of numeval is complex
!  * indices -- array of integers indicating the non-zero entries of q
!  * mu2     -- fixed value for mu2 passed to numeval
!  * coeffs  -- coefficients of type %(coeff_type)s to be solved for
!  * idx     -- label indicating which entries in coeffs the given set
!               of indices corresponds to
!
! SIDE EFFECTS
!
!  No side effect
!
! RETURN VALUE
!
!  No return value
!
! EXAMPLE
!
!
!*****
@function_recon(name,k,dmin1,qtype,dim)
!****f* src/interface/tens_rec/%(name)s
! NAME
!
! Function %(name)s
!
! USAGE
!
!  result = %(name)s(Q, indices, coeffs)
!
! DESCRIPTION
!
!  Recomputes the part of N(Q) from the coefficients where Q has exactly
!  %(k)d non-zero entries identified by the array indices.
!
! INPUTS
!
!  * Q       -- a %(qtype)s vector of dimension(0:%(dmin1)d)
!  * indices -- array of dimension(%(k)d): the set of non-zero indices.
!  * coeffs  -- an array of dimension(%(dim)s) holding the coefficients.
!               as defined in the corresponding derived type.
!
! SIDE EFFECTS
!
!  No side effect
!
! RETURN VALUE
!
!  The value of the part of N(q) coming from the terms where
!  exactly the %(k)d entries of q specified in indices are non-zero.
!
! EXAMPLE
!
!
!*****
@coeff_type(name,R,maxk)
!****t* src/interface/tens_rec/%(name)s
!
! NAME
!
!  Type %(name)s
!
! DESCRIPTION
!
!  Holds the coefficients of a mixed rank tensor integral with maximum
!  tensor rank %(R)d.
!
! ENTRIES
!
!  * c0, ..., c%(maxk)d  -- coefficients of terms with 0,...,%(maxk)d
!                           first index selects non-zero components of q
!                           second index selects a specific monomial
!
!*****
@function_glob_recon(name,type_name,R,dmin1)
!****f* src/interface/tens_rec/%(name)s
! NAME
!
! Function %(name)s
!
! USAGE
!
!  result = %(name)s(Q, coeffs, max_k)
!
! DESCRIPTION
!
!  Recomputes N(Q) from a set of tensor coefficients
!
! INPUTS
!
!  * Q       -- a real vector of dimension(0:%(dmin1)d)
!  * coeffs  -- a record of type %(type_name)s
!  * max_k   -- optional integer argument limiting the the reconstruction
!               to a subset of terms with no more than max_k components of q
!
! SIDE EFFECTS
!
!  No side effect
!
! RETURN VALUE
!
!  The value of the part of N(q) as reconstructed from the coefficients
!
! EXAMPLE
!
!
!*****
@function_glob_recon_complex(name,type_name,R,dmin1)
!****f* src/interface/tens_rec/%(name)s
! NAME
!
! Function %(name)s
!
! USAGE
!
!  result = %(name)s(Q, coeffs)
!
! DESCRIPTION
!
!  Recomputes N(Q) from a set of tensor coefficients
!
! INPUTS
!
!  * Q       -- a complex vector of dimension(0:%(dmin1)d)
!  * coeffs  -- a record of type %(type_name)s
!
! SIDE EFFECTS
!
!  No side effect
!
! RETURN VALUE
!
!  The value of the part of N(q) as reconstructed from the coefficients
!
! EXAMPLE
!
!
!*****
@subroutine_glob_solve(name,type_name,R,dmin1,xtra)
!****f* src/interface/tens_rec/%(name)s
! NAME
!
! Subroutine %(name)s
!
! USAGE
!
!  call %(name)s(numeval, mu2, coeffs%(xtra)s)
!
! DESCRIPTION
!
!  Determines the tensor coefficients of a numerator for a fixed value
!  of mu^2 with maximum rank %(R)d
!
! INPUTS
!
!  * numeval -- function representing the numerator of the problem
!  * mu2     -- fixed value of mu^2 for which the numerator is evaluated
!  * coeffs  -- a record of type %(type_name)s used to store the result
!
! SIDE EFFECTS
!
!  No side effect
!
! EXAMPLE
!
!
!*****
@subroutine_print_coeffs(name,R,type_name)
!****f* src/interface/tens_rec/%(name)s
! NAME
!
! Subroutine %(name)s
!
! Visible through public interface print_coeffs
!
! USAGE
!
!  call print_coeffs(coeffs,unit=6)
!
! DESCRIPTION
!
!  Prints the coefficients of a numerator of maximum rank %(R)d
!  in human readable form.
!
! INPUTS
!
!  * coeffs  -- a record of type %(type_name)s
!  * unit    -- number of an open file, defaults to stdout (unit=6)
!
! SIDE EFFECTS
!
!  Prints to the given file
!
! EXAMPLE
!
!
!*****
@subroutine_reconstruct(name,coeff_type,coeff_type2,R)
!****f* src/interface/tens_rec/%(name)s
! NAME
!
! Subroutine %(name)s
!
! USAGE
!
!  call %(name)s(numeval, cm0, cm1, cm2)
!
! DESCRIPTION
!
!  Reconstructs all coefficients of a tensor integral of maximum rank %(R)d,
!  including the coefficients in front of mu2 and mu2^2.
!
! INPUTS
!
!  * numeval -- the numerator function
!  * cm0     -- coefficients of type %(coeff_type)s, representing the
!               numerator at mu2=0
!  * cm1     -- coefficients of type %(coeff_type2)s, representing the
!               tensor in front of mu2 [optional]
!  * cm2     -- coefficients of type %(coeff_type2)s, representing the
!               tensor in front of mu2^2 [optional]
!
! SIDE EFFECTS
!
!  Writes results to cm0, cm1 and cm2 (if present). If cm1 and cm2 are omitted
!  only N(q,0) is evaluated. If cm2 is omitted it is assumed that the numerator
!  is at most linear in mu2.
!
! EXAMPLE
!
!
!*****
@subroutine_reconstruct_extended(name,coeff_type,coeff_type2,R)
!****f* src/interface/tens_rec/%(name)s
! NAME
!
! Subroutine %(name)s
!
! USAGE
!
!  call %(name)s(numeval, cm0, cm1, cm2, cm3)
!
! DESCRIPTION
!
!  Reconstructs all coefficients of a tensor integral of maximum rank %(R)d,
!  including the coefficients in front of mu2 and mu2^2.
!
! INPUTS
!
!  * numeval -- the numerator function
!  * cm0     -- coefficients of type %(coeff_type)s, representing the
!               numerator at mu2=0
!  * cm1     -- coefficients of type %(coeff_type2)s, representing the
!               tensor in front of mu2 [optional]
!  * cm2     -- coefficients of type %(coeff_type2)s, representing the
!               tensor in front of mu2^2 [optional]
!  * cm3     -- coefficients of type %(coeff_type2)s, representing the
!               tensor in front of mu2^3 [optional]
!
! SIDE EFFECTS
!
!  Writes results to cm0, cm1, cm2 and cm3 (if present). If cm1, cm2 and cm3 are omitted
!  only N(q,0) is evaluated. If cm2 is omitted it is assumed that the numerator
!  is at most linear in mu2. If cm3 is omitted it is assumed that the numerator
!  is at most quadratic in mu2.
! EXAMPLE
!
!
!*****
@subroutine_reconstruct_dummy(name,coeff_type,R)
!****f* src/interface/tens_rec/%(name)s
! NAME
!
! Subroutine %(name)s
!
! USAGE
!
!  call %(name)s(numeval, cm0)
!
! DESCRIPTION
!
!  Reconstructs all coefficients of a tensor integral of maximum rank %(R)d,
!  including the coefficients in front of mu2 and mu2^2.
!
!  In the given case the rank is too low in order to allow for mu2 pieces.
!
!
! INPUTS
!
!  * numeval -- the numerator function
!  * cm0     -- coefficients of type %(coeff_type)s, representing the
!               numerator
!
! SIDE EFFECTS
!
!  Writes results to cm0.
!
! EXAMPLE
!
!
!*****
@function_evaluate(name,set_name,set_type,dmin1)
!****f* src/interface/tens_comb/%(name)s
! NAME
!
! Function %(name)s
!
! Accessible through interface evaluate
!
! USAGE
!
!  amp = evaluate(numeval, momenta, %(set_name)s, rank)
!
! DESCRIPTION
!
!  Evaluates a diagram by first reconstructing its tensor coefficients
!  and then contracting with the tensor integrals.
!
! INPUTS
!
!  * numeval -- the numerator function
!  * momenta -- real array of dimension(:,0:%(dmin1)d) containing the
!               momenta r_i of the loop propagators
!  * %(set_name)-7s -- the set of pinched propagators as %(set_type)s
!  * rank    -- optional integer, specifying the maximum rank of the diagram
!               If omitted, rank is assumed to be the equal to the number of
!               loop propagators.
! RETURN VALUE
!
!  Value of the diagram as a type(form_factor)
!
! SIDE EFFECTS
!
!  None
!
! EXAMPLE
!
!
!*****
@function_contract(name,N,r,coeff_type,shift, dmin1)
!****f* src/interface/tens_comb/%(name)s
! NAME
!
! Function %(name)s
!
! USAGE
!
!  amp = %(name)s(coeffs, momenta, b_set)
!
! DESCRIPTION
!
!  Contracts the %(N)d-point rank %(r)d tensor integral
!  %(shift)swith its coefficients.
!
! INPUTS
!
!  * coeffs  -- coefficients of type(%(coeff_type)s)
!  * momenta -- real array of dimension(:,%(dmin1)d) containing the
!               momenta r_i of the loop propagators
!  * b_set   -- the set of pinched propagators as integer number (bit-set)
!
! RETURN VALUE
!
!  The result of contracting the tensor integral with its coefficient.
!
! SIDE EFFECTS
!
!  None
!
! EXAMPLE
!
!
!*****
@function_tenscontractX(name,letter,R,coeff_type,dmin1)
!****f* src/interface/tens_comb/%(name)s
! NAME
!
! Function %(name)s
!
! USAGE
!
!  ans = %(name)s(coeffs, momenta)
!
! DESCRIPTION
!
!  Contracts the a set of coefficients with an %(letter)s-type tensor
!  of rank %(R)d constructed from a given set of momenta.
!
! INPUTS
!
!  * coeffs  -- coefficients of type(%(coeff_type)s)
!  * momenta -- real array of dimension(:,%(dmin1)d) containing the
!               momenta r_i of the loop propagators
!
! RETURN VALUE
!
!  The result of the contraction which is a complex number
!
! SIDE EFFECTS
!
!  None
!
! EXAMPLE
!
!
!*****
@end_of_file
